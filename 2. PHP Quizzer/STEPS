PHP QUIZZER


CREATE AN APP WHERE YOU CAN MAKE TESTS OF KNOWLEDGE, IT'LL BE A QUIZ WHERE
YOU CAN CHOOSE ON OF MULTIPLE CHOICES FOR EACH QUESTION. EACH QUESTION 
ANSWERED CORRECTLY WILL ADD UP ON THE FINAL SCORE, DISPLAYED AT THE END.

STEPS:
        STRUCTURE AND DESIGN
        DATABASE
        PHP LOGIC AND BEHAVIOR

1   HTML & CSS STRUCTURE AND DESIGN
        INDEX PAGE
    1.1  A CONTAINER ALIGNED TO THE CENTER
    1.2  A HEADER WITH THE APP TITLE
    1.3  ANOTHER CONTAINER WITH THE SECTION
    1.4  INSIDE THE SECTION MUST HAVE A SUBTITLE, A DESCRIPTION AND SMALL LIST OF FEATURES
    1.5  THE LIST OF ITEMS WILL BE: NUMBER OF QUESTIONS, TYPE AND ESTIMATED TIME.
    1.6  A BUTTON TO START THE QUIZ.
    1.7  A FOOTER WITH FEW INFORMATIONS ABOUT THE API DEVELOPMENT
        QUESTIONS PAGE
    1.8  FOLLOWING THE SAME PATTERN FROM THE INDEX PAGE REBUILD HEADER AND FOOTER
    1.9  AT THE SECTION ADD THE QUESTION TEXT
    1.10 ADD A DIV WITH THE INDEX OF WHICH QUESTION FROM ALL EX.: "Question 2 of 5";
    1.11 ADD A FORM FOR THE MULTIPLE CHOICES
    1.12 ADD A LIST WITH 4 RADIO SELECT INPUTS FOR EACH CHOICE OF ANSWER
    1.13 ADD A BUTTON TO SUBMIT THE ANSWER
        FINAL PAGE
    1.14 ADD A CONGRATULATION MESSAGE FOR FINISHING THE QUIZ.
    1.15 ADD A SCORE TEXT TO TRACK HOW MANY QUESTIONS THE PERSON GOT IT RIGHT
    1.16 ADD A BUTTON TO RETAKE THE TASK

2.  SETTING THE DATABASE
        SETTING TABLES
    2.1  WE WILL NEED TWO DIFFERENT TABLES (questions, choices).
    2.2  questions' TABLE WILL HAS 2 COLUMNS question_number AND THE ACTUAL text, OF THE QUESTION.
    2.3  choices' TABLE WILL HAS 4 COLUMNS, id, question_number, is_correct, text.
    2.4  EACH CHOICE WILL BE RELATED TO ONE QUESTION.
    2.5  EACH QUESTION WILL RECEIVE AT MAX 4 CHOICES, AND JUST ONE WILL BE CORRECT.
    2.6  id WILL RECEIVE AUTO INCREMENT AND NOT NULL.
    2.7  question_number WILL BE THE SAME FROM questions TABLE
    2.8  is_correct WILL RECEIVE JUST TWO VALUES, 1 OR 0, TRUE OR FALSE
    2.9  text WILL BE THE TEXT OF EACH CHOICE OPTION.

3. MAKING PHP LOGIC
        TREATING QUESTION'S CHOICE FORM
    3.1  CREATING A process.php PAGE TO TREAT FORM SUBMISSIONS
    3.2  CHECK IF THE FORM HAS BEENN SUBMITTED
    3.3  SAVING QUESTION NUMBER AND SELECTED QUESTION POST INTO VARIABLES
    3.4  CHECKING IF THE SLECTED CHOICE IS THE CORRECT CHOICE USING QUERY WHERE is_correct (COLUMN) = 1;
    3.5  
        ADD QUESTION AND CHOICES TO THE DATABASE
    